/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

/*
 * SDK Root: /Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS8.sdk
 */

#import "UIViewController.h"

#import "BBObserverDelegate-Protocol.h"
#import "SBBulletinViewControllerDelegate-Protocol.h"
#import "SBModeViewControllerContentProviding-Protocol.h"
#import "SBNotificationCenterWidgetHost-Protocol.h"
#import "SBUISizeObservingViewDelegate-Protocol.h"
#import "SBWidgetViewControllerDelegate-Protocol.h"

@class BBObserver, BSSerializedRequestQueue, NSArray, NSMutableArray, NSMutableDictionary, NSObject<OS_dispatch_queue>, NSString, SBBulletinViewController, UIView, _UIContentUnavailableView;

@interface SBBulletinObserverViewController : UIViewController <SBUISizeObservingViewDelegate, BBObserverDelegate, SBBulletinViewControllerDelegate, SBWidgetViewControllerDelegate, SBNotificationCenterWidgetHost, SBModeViewControllerContentProviding>
{
    BBObserver *_observer;
    unsigned long long _feed;
    id _delegate;
    id <SBWidgetViewControllerDelegate> _widgetDelegate;
    BSSerializedRequestQueue *_sectionRequestQueue;
    BSSerializedRequestQueue *_bulletinRequestQueue;
    NSMutableDictionary *_enabledSectionInfosByID;
    NSMutableArray *_visibleSectionIDs;
    NSMutableDictionary *_bulletinIDsByFeed;
    UIView *_contentProvidingView;
    SBBulletinViewController *_bulletinViewController;
    _UIContentUnavailableView *_contentUnavailableView;
    long long _sectionOrderRule;
    long long _supportedCategory;
    NSArray *_sectionOrder;
    NSMutableArray *_makeshiftSectionOrder;
    NSObject<OS_dispatch_queue> *_handlingControlQueue;
    long long _bulletinHandlingDisabledCount;
    long long _sectionHandlingDisabledCount;
    struct {
        unsigned int isRePushingUpdates:1;
        unsigned int scrollsToTop:1;
        unsigned int isLayoutValid:1;
    } _bulletinObserverViewControllerFlags;
}

+ (unsigned long long)_contentUnavailableVibrantOptionsForCurrentState;
+ (id)allCategories;
- (void)_addBulletinID:(id)arg1 toSetForFeed:(unsigned long long)arg2;
- (void)_addBulletinID:(id)arg1 toSetForFeeds:(unsigned long long)arg2;
- (void)_addSection:(id)arg1 toCategory:(long long)arg2 widget:(id)arg3;
- (void)_associateBulletin:(id)arg1 withSection:(id)arg2 forFeed:(unsigned long long)arg3;
- (id)_bulletinAfterBulletin:(id)arg1 inSection:(id)arg2;
- (id)_bulletinWithIdentifier:(id)arg1 inSection:(id)arg2;
- (void)_disassociateBulletin:(id)arg1 fromSection:(id)arg2;
- (id)_enabledSectionWithIdentifier:(id)arg1;
- (void)_enqueueBulletinRequest:(id)arg1 forBulletinInfo:(void)arg2;
- (unsigned long long)_feedsForBulletinID:(id)arg1;
- (struct CGRect)_frameforViewWithContentForMode:(long long)arg1;
- (void)_handlingQueue_setBulletinHandlingEnabled:(_Bool)arg1;
- (void)_handlingQueue_setSectionHandlingEnabled:(_Bool)arg1;
- (void)_insertContentUnavailableView;
- (void)_insertSectionIfNecessary:(id)arg1 commit:(_Bool)arg2;
- (_Bool)_isBulletin:(id)arg1 associatedWithSection:(id)arg2;
- (_Bool)_isBulletin:(id)arg1 associatedWithSection:(id)arg2 forFeed:(unsigned long long)arg3;
- (_Bool)_isSectionVisible:(id)arg1;
- (id)_lazyContentUnavailableView;
- (void)_loadSection:(id)arg1;
- (unsigned long long)_numberOfBulletinsInSection:(id)arg1;
- (unsigned long long)_numberOfVisibleSections;
- (id)_reassociateBulletin:(id)arg1 withSection:(id)arg2;
- (void)_removeBulletinIDFromAllFeeds:(id)arg1;
- (void)_removeBulletinViewControllerView;
- (void)_setSection:(id)arg1 enabled:(_Bool)arg2;
- (void)_setSection:(id)arg1 visible:(_Bool)arg2;
- (void)_setSectionOrder:(id)arg1 forCategory:(long long)arg2;
- (void)_setSectionOrderRule:(long long)arg1;
- (void)_setupQueue:(id *)arg1 withLabel:(const char *)arg2;
- (void)_setupRequestQueues;
- (void)_sortAndCommitReloadOfSectionsInCategory:(long long)arg1;
- (void)_teardownRequestQueue:(id *)arg1;
- (void)_teardownRequestQueues;
- (void)_transitionToBulletinViewControllerView:(_Bool)arg1 animated:(_Bool)arg2;
- (void)_transitionToBulletinViewControllerViewIfNecessary;
- (void)_updateMakeshiftSectionOrderIfNecessary:(id)arg1;
- (void)_updateSection:(id)arg1 forCategory:(long long)arg2 completion:(id)arg3;
- (void)addBulletin:(id)arg1 toSection:(id)arg2 forFeed:(unsigned long long)arg3;
- (id)bulletinAtIndex:(unsigned long long)arg1 inSection:(id)arg2;
@property(readonly, nonatomic) SBBulletinViewController *bulletinViewController; // @synthesize bulletinViewController=_bulletinViewController;
- (_Bool)bulletinViewController:(id)arg1 didSelectAction:(id)arg2 forBulletin:(id)arg3 inSection:(id)arg4;
- (_Bool)bulletinViewController:(id)arg1 didSelectBulletin:(id)arg2 inSection:(id)arg3;
- (long long)bulletinViewController:(id)arg1 insertionAnimationForBulletin:(id)arg2 inSection:(id)arg3;
- (long long)bulletinViewController:(id)arg1 removalAnimationForBulletin:(id)arg2 inSection:(id)arg3;
- (long long)bulletinViewController:(id)arg1 replacementAnimationForBulletin:(id)arg2 inSection:(id)arg3;
- (_Bool)bulletinViewController:(id)arg1 shouldHighlightBulletin:(id)arg2 inSection:(id)arg3;
- (struct UIEdgeInsets)bulletinViewControllerContentInsetsForMode:(long long)arg1;
- (_Bool)canRemoveViewOnDismissal:(id)arg1;
- (void)clearSection:(id)arg1;
- (void)commitInsertionOfBulletin:(id)arg1 beforeBulletin:(id)arg2 inSection:(id)arg3 forFeed:(unsigned long long)arg4;
- (void)commitInsertionOfSection:(id)arg1 beforeSection:(id)arg2;
- (void)commitMoveOfBulletin:(id)arg1 inSection:(id)arg2 beforeBulletin:(id)arg3 inSection:(id)arg4;
- (void)commitMoveOfSection:(id)arg1 beforeSection:(id)arg2;
- (void)commitReloadOfSections:(id)arg1;
- (void)commitRemovalOfBulletin:(id)arg1 fromSection:(id)arg2;
- (void)commitRemovalOfSection:(id)arg1;
- (void)commitReplacementWithBulletin:(id)arg1 ofBulletin:(id)arg2 inSection:(id)arg3;
- (void)commitReplacementWithSection:(id)arg1 ofSection:(id)arg2;
@property(readonly, nonatomic) struct CGSize contentSize;
- (id)contentUnavailableText;
- (void)dealloc;
@property(nonatomic) id <SBBulletinActionHandler> delegate; // @synthesize delegate=_delegate;
- (void)didAssociateBulletin:(id)arg1 withSection:(id)arg2 forFeed:(unsigned long long)arg3;
- (id)firstSection;
- (void)hostDidDismiss;
- (void)hostDidPresent;
- (void)hostWillDismiss;
- (void)hostWillPresent;
- (unsigned long long)indexOfBulletin:(id)arg1 inSection:(id)arg2;
- (unsigned long long)indexOfSectionWithIdentifier:(id)arg1;
- (id)infoForBulletin:(id)arg1 inSection:(id)arg2 forFeed:(unsigned long long)arg3;
- (id)infoForBulletinSection:(id)arg1;
- (id)infoForSection:(id)arg1;
- (id)infoForWidget:(id)arg1 inSection:(id)arg2;
- (id)infoForWidgetSection:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)initWithObserverFeed:(unsigned long long)arg1;
- (id)initWithObserverFeed:(unsigned long long)arg1 bulletinViewControllerClass:(Class)arg2;
- (void)insertAppropriateViewWithContent;
- (void)insertBulletinViewControllerView;
- (void)invalidateContentLayout;
- (void)invokeBlockWithAllWidgets:(id)arg1;
- (_Bool)isBulletinHandlingEnabled;
- (_Bool)isRePushingUpdates;
@property(nonatomic, getter=isRequestHandlingEnabled) _Bool requestHandlingEnabled;
- (_Bool)isSectionHandlingEnabled;
- (long long)layoutMode;
- (long long)layoutModeForBulletinViewController:(id)arg1;
- (void)loadView;
- (id)observer;
- (void)observer:(id)arg1 addBulletin:(id)arg2 forFeed:(unsigned long long)arg3;
- (id)observer:(id)arg1 composedAttachmentImageForType:(long long)arg2 thumbnailData:(id)arg3 key:(id)arg4;
- (struct CGSize)observer:(id)arg1 composedAttachmentSizeForType:(long long)arg2 thumbnailWidth:(float)arg3 height:(float)arg4 key:(id)arg5;
- (void)observer:(id)arg1 modifyBulletin:(id)arg2 forFeed:(unsigned long long)arg3;
- (void)observer:(id)arg1 noteInvalidatedBulletinIDs:(id)arg2;
- (void)observer:(id)arg1 noteSectionParametersChanged:(id)arg2 forSectionID:(id)arg3;
- (void)observer:(id)arg1 noteServerConnectionStateChanged:(_Bool)arg2;
- (void)observer:(id)arg1 removeBulletin:(id)arg2;
- (id)observer:(id)arg1 thumbnailSizeConstraintsForAttachmentType:(long long)arg2;
- (void)observer:(id)arg1 updateSectionInfo:(id)arg2 inCategory:(long long)arg3;
- (void)observer:(id)arg1 updateSectionOrder:(id)arg2 forCategory:(long long)arg3;
- (void)observer:(id)arg1 updateSectionOrderRule:(long long)arg2;
- (_Bool)observerShouldFetchAttachmentImageBeforeBulletinDelivery:(id)arg1;
- (_Bool)observerShouldFetchAttachmentSizeBeforeBulletinDelivery:(id)arg1;
- (void)pushUpdatesAgainForFeeds:(unsigned long long)arg1;
- (void)pushUpdatesAgainForSectionWithIdentifier:(id)arg1 feeds:(unsigned long long)arg2;
- (void)remoteViewControllerDidConnectForWidget:(id)arg1;
- (void)removeAndDisableSection:(id)arg1;
- (void)removeBulletin:(id)arg1 fromSection:(id)arg2;
- (void)removeSection:(id)arg1;
- (void)replaceBulletin:(id)arg1 inSection:(id)arg2;
@property(nonatomic) _Bool scrollsToTop;
- (id)sectionAfterSection:(id)arg1;
- (id)sectionIdentifierAtIndex:(unsigned long long)arg1;
- (long long)sectionOrderRule;
- (id)sectionWithIdentifier:(id)arg1;
- (void)setBulletinHandlingEnabled:(_Bool)arg1;
- (void)setSectionHandlingEnabled:(_Bool)arg1;
@property(nonatomic) id <SBWidgetViewControllerDelegate> widgetDelegate; // @synthesize widgetDelegate=_widgetDelegate;
- (void)sizeObservingView:(id)arg1 didChangeSize:(struct CGSize)arg2;
- (void)sortVisibleSectionsForCategory:(long long)arg1;
@property(readonly, nonatomic) long long supportedCategory;
- (void)transitionToContentUnavailableViewIfNecessary;
- (void)updateSection:(id)arg1 withInfo:(id)arg2;
- (void)updateSection:(id)arg1 withParameters:(id)arg2;
- (void)viewDidLoad;
- (void)viewWillLayoutSubviews;
- (id)widget:(SEL)arg1 didUpdatePreferredHeight:(id)arg2 completion:(double)arg3;
- (void)widget:(id)arg1 requestsLaunchOfURL:(id)arg2;
- (void)widget:(id)arg1 requestsPresentationOfViewController:(id)arg2 presentationStyle:(long long)arg3 context:(id)arg4 completion:(id)arg5;
- (id)widgetForSection:(id)arg1;
- (void)willAssociateBulletin:(id)arg1 withSection:(id)arg2 forFeed:(unsigned long long)arg3;
- (void)willDisassociateBulletin:(id)arg1 fromSection:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

