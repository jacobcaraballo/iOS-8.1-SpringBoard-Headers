/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

/*
 * SDK Root: /Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS8.sdk
 */

#import "SBGestureRecognizer.h"

@interface SBFluidSlideGestureRecognizer : SBGestureRecognizer
{
    int m_degreeOfFreedom;
    unsigned long long m_minTouches;
    _Bool m_blocksIconController;
    double _animationDistance;
    double _commitDistance;
    double _accelerationThreshold;
    double _accelerationPower;
    int _requiredDirectionality;
    double _defaultHandSize;
    double _handSizeCompensationPower;
    double _incrementalMotion;
    double _smoothedIncrementalMotion;
    double _cumulativeMotion;
    double _cumulativeMotionEnvelope;
    double _cumulativeMotionSkipped;
    _Bool _hasSignificantMotion;
    struct CGPoint _movementVelocityInPointsPerSecond;
    struct CGPoint _centroidPoint;
    double _recognitionStartTimestamp;
}

@property(nonatomic) double accelerationPower; // @synthesize accelerationPower=_accelerationPower;
@property(nonatomic) double accelerationThreshold; // @synthesize accelerationThreshold=_accelerationThreshold;
@property(readonly, nonatomic) double activeRecognitionDuration;
- (double)activeTouchTimestamp;
@property(nonatomic) double animationDistance; // @synthesize animationDistance=_animationDistance;
@property(readonly, nonatomic) struct CGPoint centroidPoint; // @synthesize centroidPoint=_centroidPoint;
- (long long)completionTypeProjectingMomentumForInterval:(double)arg1;
- (void)computeCentroidPoint:(struct __SBGestureContext *)arg1;
- (void)computeGestureMotion:(struct __SBGestureContext *)arg1;
- (double)computeHandSizeCompensationGain:(double)arg1;
- (void)computeHasSignificantMotionIfNeeded:(struct __SBGestureContext *)arg1;
- (double)computeIncrementalGestureMotion:(struct __SBGestureContext *)arg1;
- (double)computeNonlinearSpeedGain:(double)arg1;
@property(readonly, nonatomic) double cumulativeMotion;
@property(readonly, nonatomic) double cumulativePercentage;
@property(readonly, nonatomic) int degreeOfFreedom; // @synthesize degreeOfFreedom=m_degreeOfFreedom;
@property(readonly, nonatomic) double incrementalMotion;
- (id)init;
@property(nonatomic) unsigned long long minTouches; // @synthesize minTouches=m_minTouches;
@property(readonly, nonatomic) struct CGPoint movementVelocityInPointsPerSecond; // @synthesize movementVelocityInPointsPerSecond=_movementVelocityInPointsPerSecond;
- (double)projectMotionForInterval:(double)arg1;
@property(nonatomic) int requiredDirectionality; // @synthesize requiredDirectionality=_requiredDirectionality;
- (void)reset;
- (void)setState:(int)arg1;
- (void)skipCumulativeMotion;
@property(readonly, nonatomic) double skippedCumulativePercentage;
- (void)touchesBegan:(struct __SBGestureContext *)arg1;
- (void)touchesCancelled:(struct __SBGestureContext *)arg1;
- (void)touchesEnded:(struct __SBGestureContext *)arg1;
- (void)touchesMoved:(struct __SBGestureContext *)arg1;
- (void)updateForBeganOrMovedTouches:(struct __SBGestureContext *)arg1;
- (void)updateForEndedOrCancelledTouches:(struct __SBGestureContext *)arg1;

@end

