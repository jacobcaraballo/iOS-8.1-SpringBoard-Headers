/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

/*
 * SDK Root: /Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS8.sdk
 */

#import "UIViewController.h"

#import "BBObserverDelegate-Protocol.h"
#import "SBCoordinatedPresenting-Protocol.h"
#import "SBLockScreenActionHandler-Protocol.h"
#import "SBLockScreenNotificationBannerItemDelegate-Protocol.h"
#import "SBLockScreenNotificationModel-Protocol.h"
#import "SBLockScreenNotificationViewDelegate-Protocol.h"
#import "SBMotionGestureObserver-Protocol.h"
#import "SBPresentingDelegate-Protocol.h"
#import "SBUIBannerSource-Protocol.h"
#import "SBUIBannerTargetManagerObserver-Protocol.h"
#import "SBVolumePressBandit-Protocol.h"

@class BBObserver, BSSerializedRequestQueue, NSMutableArray, NSSet, NSString, SBAwayViewPluginController, SBLockScreenActionContext, SBLockScreenBounceAnimator, SBLockScreenNotificationCell, SBLockScreenNotificationListView;

@interface SBLockScreenNotificationListController : UIViewController <SBLockScreenNotificationViewDelegate, SBLockScreenNotificationModel, BBObserverDelegate, SBVolumePressBandit, SBUIBannerSource, SBUIBannerTargetManagerObserver, SBLockScreenActionHandler, SBLockScreenNotificationBannerItemDelegate, SBPresentingDelegate, SBCoordinatedPresenting, SBMotionGestureObserver>
{
    SBLockScreenNotificationListView *_notificationView;
    id <SBLockScreenNotificationListDelegate> _delegate;
    BBObserver *_observer;
    NSMutableArray *_listItems;
    NSMutableArray *_realertTimers;
    BSSerializedRequestQueue *_bulletinRequestQueue;
    _Bool _hibernating;
    _Bool _quietModeEnabled;
    id _deferredModelUpdateBlock;
    _Bool _hasDeferredUpdateToClearListItems;
    SBLockScreenActionContext *_actionContext;
    id <SBUIBannerTarget> _bannerTarget;
    NSMutableArray *_listItemsBannerQueue;
    SBAwayViewPluginController *_activePlugin;
    _Bool _isOnscreen;
    _Bool _hasMissedUnreadNotifications;
    long long _messagePrivacyRevealState;
    id <SBPresentingDelegate> _presentingDelegate;
    SBLockScreenBounceAnimator *_bounceAnimator;
    SBLockScreenNotificationCell *_hintingCell;
    struct CGPoint _hintingCellOriginalOffset;
    _Bool _hasAnyContent;
}

+ (id)underlayPropertiesFactory;
- (void)_activateOrUpdateCardItem:(id)arg1 animated:(_Bool)arg2;
- (void)_addBounceAnimator;
- (void)_addItem:(id)arg1 forBulletin:(id)arg2 playLightsAndSirens:(_Bool)arg3 withReply:(id)arg4;
- (id)_coalescableListItemForNewBulletin:(id)arg1;
- (void)_dismissBulletinsForActionContext:(id)arg1;
- (id)_firstBulletin;
- (_Bool)_firstBulletinHasRaiseAction;
- (id)_firstItemWantingFullscreenPresentation;
- (void)_hardwareButtonPressed:(id)arg1;
- (void)_killRealerts:(id)arg1;
- (id)_listItemContainingBulletinID:(id)arg1;
- (id)_listItemContainingCardItem:(id)arg1;
- (id)_listItemContainingSystemAlert:(id)arg1;
- (id)_newItemForBulletin:(id)arg1;
- (void)_playSoundForBulletinIfPossible:(id)arg1;
- (void)_presentFullscreenBulletinAlertIfNeeded;
- (void)_realertTimerFired:(id)arg1;
- (void)_reloadVolumePressBanditPreference;
- (void)_removeCachedBannerForBulletinID:(id)arg1;
- (void)_scheduleRealerts:(id)arg1;
- (void)_setDeferredModelUpdateBlock:(id)arg1;
- (_Bool)_shouldAddBannerItem:(id)arg1;
- (_Bool)_shouldCacheBannerForBulletin:(id)arg1;
- (void)_showTestBulletin;
- (void)_sortItemList:(id)arg1;
- (void)_updateModelAndViewForAdditionOfItem:(id)arg1;
- (void)_updateModelAndViewForModificationOfItem:(id)arg1;
- (void)_updateModelAndViewForRemovalOfItem:(id)arg1;
- (void)_updateModelAndViewForReplacingItem:(id)arg1 withNewItem:(id)arg2;
- (void)_updateModelForRemovalOfItem:(id)arg1 updateView:(_Bool)arg2;
- (void)_updateMotionGestureObservation;
- (void)abortAnimatedTransition;
- (_Bool)activateAlertItem:(id)arg1 animated:(_Bool)arg2;
- (void)activateCardItem:(id)arg1 animated:(_Bool)arg2;
@property(retain, nonatomic) SBAwayViewPluginController *activePlugin; // @synthesize activePlugin=_activePlugin;
- (void)bannerItemWasTapped:(id)arg1;
- (void)bannerTargetManager:(id)arg1 didAddTarget:(id)arg2;
- (void)bannerTargetManager:(id)arg1 didRemoveTarget:(id)arg2;
- (void)beginPresentationWithTouchLocation:(struct CGPoint)arg1;
- (void)cancelGestureRecognizer:(id)arg1;
- (id)cellAtTouchLocation:(struct CGPoint)arg1;
- (void)clearItemsForNotificationCenter;
- (void)concealForChangeInMessagePrivacy;
@property(readonly, nonatomic) NSSet *conflictingGestures;
@property(readonly, nonatomic) long long coordinatedPresentingControllerIdentifier;
- (unsigned long long)count;
- (void)deactivateAlertItem:(id)arg1 animated:(_Bool)arg2;
- (void)deactivateCardItem:(id)arg1;
- (void)dealloc;
@property(nonatomic) id <SBLockScreenNotificationListDelegate> delegate; // @synthesize delegate=_delegate;
- (id)dequeueNextBannerItemForTarget:(id)arg1;
- (void)didReceiveRaiseGesture;
- (_Bool)dismissReadNotifications;
- (void)endTransitionWithVelocity:(struct CGPoint)arg1 wasCancelled:(_Bool)arg2 completion:(id)arg3;
@property(readonly, nonatomic) NSSet *gestures;
- (void)handleLockScreenActionWithContext:(id)arg1;
- (void)handleVolumeDecrease;
- (void)handleVolumeIncrease;
@property(nonatomic) _Bool hasAnyContent; // @synthesize hasAnyContent=_hasAnyContent;
- (_Bool)hasMissedUnreadNotifications;
@property(readonly, nonatomic) double hintDisplacement;
@property(readonly, nonatomic) unsigned long long hintEdge;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
@property(nonatomic) _Bool isHibernating; // @synthesize isHibernating=_hibernating;
- (_Bool)isPresentingControllerTransitioning;
@property(readonly, nonatomic, getter=isUsingBanners) _Bool usingBanners;
- (void)killBulletinSounds;
- (id)listItemAtIndexPath:(id)arg1;
- (void)listView:(id)arg1 cellDidBeginScrolling:(id)arg2;
- (void)listView:(id)arg1 cellDidEndScrolling:(id)arg2;
- (void)listViewDidBeginScrolling:(id)arg1;
- (void)listViewDidEndScrolling:(id)arg1;
- (void)loadView;
@property(retain, nonatomic) SBLockScreenActionContext *lockScreenActionContext; // @synthesize lockScreenActionContext=_actionContext;
- (id)lockScreenScrollView;
- (void)lockScreenViewDidEndScrollingOnPage:(long long)arg1;
- (id)newBannerViewForContext:(id)arg1;
- (void)noteListViewReadyForModelUpdate;
- (void)noteUnlockActionChanged:(id)arg1;
- (void)observer:(id)arg1 addBulletin:(id)arg2 forFeed:(unsigned long long)arg3 playLightsAndSirens:(_Bool)arg4 withReply:(id)arg5;
- (id)observer:(id)arg1 composedAttachmentImageForType:(long long)arg2 thumbnailData:(id)arg3 key:(id)arg4;
- (void)observer:(id)arg1 modifyBulletin:(id)arg2;
- (id)observer:(id)arg1 multipleThumbnailSizeConstraintsForAttachmentType:(long long)arg2;
- (void)observer:(id)arg1 noteAlertBehaviorOverridesChanged:(unsigned long long)arg2;
- (void)observer:(id)arg1 noteInvalidatedBulletinIDs:(id)arg2;
- (void)observer:(id)arg1 noteServerConnectionStateChanged:(_Bool)arg2;
- (void)observer:(id)arg1 removeBulletin:(id)arg2;
- (_Bool)observerShouldFetchAttachmentImageBeforeBulletinDelivery:(id)arg1;
- (id)peekNextBannerItemForTarget:(id)arg1;
- (id)pendOrDeactivateAlertItems;
- (void)prepareForTeardown;
- (_Bool)presentingController:(id)arg1 gestureRecognizer:(id)arg2 shouldReceiveTouch:(id)arg3;
- (_Bool)presentingController:(id)arg1 gestureRecognizerShouldBegin:(id)arg2;
- (void)presentingController:(id)arg1 willHandleGesture:(id)arg2;
- (void)presentingControllerDidFinishPresentation:(id)arg1;
@property(nonatomic) id <SBPresentingDelegate> presentingDelegate;
@property(readonly, nonatomic) _Bool quietModeEnabled; // @synthesize quietModeEnabled=_quietModeEnabled;
- (void)reenableGestureRecognizer:(id)arg1;
- (void)revealForChangeInMessagePrivacy;
- (void)setInScreenOffMode:(_Bool)arg1;
- (void)setIsOnscreen:(_Bool)arg1;
- (_Bool)shouldBeginHintForGesture:(id)arg1;
- (_Bool)shouldPlaySoundForItem:(id)arg1;
- (_Bool)shouldTreatItemAsInert:(id)arg1;
@property(readonly, nonatomic) NSSet *tapExcludedViews;
- (void)turnOnScreenIfNecessaryForItem:(id)arg1;
- (void)updateCardItem:(id)arg1;
- (void)updateTransitionWithTouchLocation:(struct CGPoint)arg1 velocity:(struct CGPoint)arg2;
- (void)viewWillAppear:(_Bool)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

