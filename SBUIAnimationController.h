/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

/*
 * SDK Root: /Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS8.sdk
 */

#import "NSObject.h"

#import "BSTransactionObserver-Protocol.h"

@class BSTransaction, NSHashTable, NSMutableArray, NSString, SBApplication, SBDisplaySettings, UIView, UIWindow;

@interface SBUIAnimationController : NSObject <BSTransactionObserver>
{
    UIWindow *_transitionWindow;
    UIView *_transitionContainer;
    SBApplication *_activatingApp;
    SBApplication *_deactivatingApp;
    SBDisplaySettings *_activatingAppSettings;
    SBDisplaySettings *_deactivatingAppSettings;
    id _commitBlock;
    int _animationState;
    _Bool _cancelOnNextSuspendIfNecessary;
    _Bool _didPostBeginAnimationNotification;
    _Bool _didNotifyObserversOfCompletion;
    _Bool _needsCATransactionActivate;
    NSHashTable *_observers;
    NSMutableArray *_startDependencies;
    _Bool _preparing;
    SBApplication *_progressDependency;
    BSTransaction *_waitForActivationDependency;
    id <BSLogging> _debugLogger;
}

- (_Bool)__animationShouldStart;
- (void)__cancelAnimation;
- (void)__cleanupAnimation;
- (void)__evaluateStartDependencies;
- (id)__newWaitForAppActivationTransaction;
- (void)__noteAnimationDidTerminateWithSuccess:(_Bool)arg1;
- (void)__startAnimation;
- (_Bool)__wantsInitialProgressStateChange;
- (void)_addStartTransactionDependency:(id)arg1;
- (id)_animationIdentifier;
- (id)_animationProgressDependency;
- (int)_animationState;
- (void)_applicationActivationStateDidChange;
- (void)_applicationDependencyStateChanged;
- (void)_cancelAnimation;
- (void)_cleanupAnimation;
- (void)_enumerateObserversSafely:(id)arg1;
- (id)_getTransitionWindow;
- (_Bool)_isNullAnimation;
- (void)_noteAnimationDidCommit:(_Bool)arg1 withDuration:(double)arg2 afterDelay:(double)arg3;
- (void)_noteAnimationDidFail;
- (void)_noteAnimationDidFinish;
- (void)_noteAnimationDidRevealApplication;
- (void)_notifyObserversOfCompletion;
- (void)_prepareAnimation;
- (void)_removeStartTransactionDependency:(id)arg1;
- (void)_setAnimationState:(int)arg1;
- (void)_setHidden:(_Bool)arg1;
- (void)_setupStartDependencies;
- (_Bool)_shouldDismissBanner;
- (void)_startAnimation;
- (void)_startMonitoringStartDependency:(id)arg1;
- (id)_startTransactionDependencies;
- (void)_startTransactionDependency:(id)arg1 didComplete:(_Bool)arg2;
- (void)_stopMonitoringStartDependency:(id)arg1;
- (_Bool)_waitsForApplicationActivationIfNecessary;
- (_Bool)_willAnimate;
@property(retain, nonatomic) SBApplication *activatingApp; // @synthesize activatingApp=_activatingApp;
@property(retain, nonatomic) SBDisplaySettings *activatingAppSettings; // @synthesize activatingAppSettings=_activatingAppSettings;
- (void)addObserver:(id)arg1;
- (_Bool)animating;
- (void)beginAnimation;
@property(nonatomic) _Bool cancelOnNextSuspendIfNecessary; // @synthesize cancelOnNextSuspendIfNecessary=_cancelOnNextSuspendIfNecessary;
@property(copy, nonatomic) id commitBlock; // @synthesize commitBlock=_commitBlock;
@property(readonly, retain, nonatomic) UIView *containerView; // @synthesize containerView=_transitionContainer;
@property(retain, nonatomic) SBApplication *deactivatingApp; // @synthesize deactivatingApp=_deactivatingApp;
@property(retain, nonatomic) SBDisplaySettings *deactivatingAppSettings; // @synthesize deactivatingAppSettings=_deactivatingAppSettings;
- (void)dealloc;
@property(retain, nonatomic) id <BSLogging> debugLogger;
- (void)endAnimation;
- (id)init;
- (id)initWithActivatingApp:(id)arg1 deactivatingApp:(id)arg2;
- (_Bool)isComplete;
- (_Bool)isReasonableMomentToInterrupt;
@property(nonatomic) _Bool needsCATransactionActivate; // @synthesize needsCATransactionActivate=_needsCATransactionActivate;
- (void)removeObserver:(id)arg1;
- (void)transactionDidComplete:(id)arg1;
- (_Bool)waitingToStart;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

